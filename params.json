{"name":"ActiveCopy","tagline":"Jekyll on Rails","body":"# ActiveCopy\r\n\r\nActiveCopy is a Rails model layer for reading from static page files.\r\nInspired by [Jekyll](http://jekyllrb.com), it hacks ActionView to allow for storage\r\nof static page content inside app/views as YAML Front Matter/Markdown.\r\n\r\n[![Build Status](https://travis-ci.org/tubbo/active_copy.png?branch=master)](https://travis-ci.org/tubbo/active_copy)\r\n\r\n## Setup\r\n\r\nAdd to Gemfile:\r\n\r\n```ruby\r\ngem 'active_copy'\r\n```\r\n\r\nAnd generate a model:\r\n\r\n```bash\r\n$ rails generate copy article\r\n```\r\n\r\nYou'll get this as **app/models/article.rb**:\r\n\r\n```ruby\r\nclass Article < ActiveCopy::Base\r\n  attr_accessible :title\r\nend\r\n```\r\n\r\nYou'll also see a generator pop up in **lib/generators** that\r\ncorresponds to the name you gave the original generator. The `copy`\r\ngenerator actually \"generates a generator\" so that you can more easily\r\ngenerate your custom model records (files).\r\n\r\n## Usage\r\n\r\nYou can define articles in **app/views/articles/content/your-article.md**:\r\n\r\n```markdown\r\n---\r\ntitle: \"The title of your article\"\r\n---\r\n\r\nHi I'm a static article.\r\n```\r\n\r\nRetrieve that article from a param in your route:\r\n\r\n```ruby\r\nclass ArticlesController < ApplicationController\r\n  def show\r\n    @article = Article.find params[:id]\r\n\r\n    respond_with @article\r\n  end\r\nend\r\n```\r\n\r\nAnd show the article in your view:\r\n\r\n```haml\r\n#article\r\n  %h1= @article.name\r\n  .content= @article.content\r\n```\r\n\r\n## Contributing\r\n\r\nYou can contribute by making a GitHub pull request. Please include tests\r\nwith your feature/bug fix and an ample description as to why you're\r\nfixing the bug.\r\n\r\n### Roadmap\r\n\r\n- Generators\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}